<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<select id="findMemberById" resultType="memberDTO">
		SELECT m.id, m.nick, m.password, i.img_path as imgPath
		FROM ( select img_path, id from img i, dog d where i.img_no=d.img_no) i, member m
		WHERE m.id=i.id(+) and m.id=#{value}
	</select>

	<select id="mypageInfoById" resultType="memberDTO">
		 SELECT m.id, m.nick, m.tel, m.pw_answer, m.regdate, m.category_no, t.role	 
		FROM ( SELECT MAX(category_no) as role,id FROM TIER GROUP BY id HAVING id=#{value}) t, member m
		WHERE t.id=m.id
	</select>
	
	<select id="findAjaxMemberById" parameterType="string" resultType="int">
		 SELECT count(*)
		 FROM member
		 WHERE id=#{value}
	</select>
	
	<select id="selectAuthorityById" resultType="int">
		SELECT category_no
		FROM tier
		WHERE id=#{value}
	</select>

	<select id="findDogById" parameterType="string" resultType="dogDTO">
		SELECT d.dog_no as dogNo, d.name, trunc(months_between(sysdate, d.bdate)/12)+1 as age,
						to_char(d.bdate, 'mm-dd') as bdate, neutralization, to_char(d.reg_date, 'yyyy-mm-dd') as regDate,
						d.intro, d.id, i.img_path as imgPath, c.category_name as gender,
						d.img_no as imgNo 
		FROM dog d, img i, category c
		WHERE d.id=#{value} and d.img_no=i.img_no and c.category_no=d.category_no
	</select>

	<select id="getDateInfoByBoardNo" parameterType="int" resultType="dateDTO">
		SELECT to_char(g.meeting_start, 'yyyy.mm.dd') as meetingStart, to_char(g.meeting_end, 'yyyy.mm.dd') as meetingEnd
		FROM meeting m, gatheringdate g
		WHERE m.date_no=g.date_no and m.board_no=#{value}
	</select>
	
<resultMap id="mypage_opened" type="meetingDTO">
	<result property="boardNo" column="boardNo" />
	<collection property="date" column="boardNo" javaType="com.sixfam.withpet.model.dto.DateDTO" 
	ofType="dateDTO" select="getDateInfoByBoardNo"></collection>
</resultMap>
	<select id="getMeetingInfoById" parameterType="hashmap" resultMap="mypage_opened">
		SELECT b.rnum, b.board_no as boardNo, b.title, al.place, al.category_name as meetingState,
		i.img_path as imgPath, cg.category_name as meetingType
		FROM (select board_no, row_number() over(order by board_no desc) as rnum, title, id, category_no from board) b, category cg,
		(select m.board_no, m.img_no, m.place, c.category_name from meeting m, category c
		where m.category_no=c.category_no) al, img i, meetingType mt
		WHERE b.category_no=17 and b.id=#{id} and al.board_no=b.board_no and i.img_no=al.img_no
		and mt.board_no=b.board_no and mt.category_no=cg.category_no and rnum between #{startRNum} and #{endRNum} order by rnum asc
	</select>
	
<resultMap type="meetingDTO" id="attenderHistory">
	<result property="boardNo" column="boardNo"/>
	<collection property="date" column="boardNo" javaType="com.sixfam.withpet.model.dto.DateDTO" 
	ofType="dateDTO" select="getDateInfoByBoardNo"/>
</resultMap>
	<select id="getAttenderHistoryById" parameterType="hashmap" resultMap="attenderHistory">
		SELECT	at.rnum, at.board_no as boardNo, b.title, al.place, al.category_name as meetingState, i.img_path as imgPath, cg.category_name as meetingType
		FROM 	(select board_no, row_number() over(order by board_no desc) as rnum from attender where id=#{id}) at, 
						(select board_no, title, category_no from board) b, img i, meetingType mt, category cg, 
			 			(select m.board_no, m.img_no, m.place, c.category_name from meeting m, category c where m.category_no=c.category_no) al	 			
		WHERE 	at.board_no=b.board_no and al.board_no=b.board_no and i.img_no=al.img_no
						and mt.board_no=b.board_no and mt.category_no=cg.category_no and rnum between #{startRNum} and #{endRNum} order by rnum asc
	</select>
	
<resultMap type="meetingDTO" id="sympathyHistory">
	<result property="boardNo" column="boardNo"/>
	<collection property="date" column="boardNo" javaType="com.sixfam.withpet.model.dto.DateDTO" 
	ofType="dateDTO" select="getDateInfoByBoardNo"/>
</resultMap>
 
	<select id="getSympathyHistoryById" parameterType="hashmap" resultMap="sympathyHistory">
		SELECT	sp.rnum, sp.board_no as boardNo, b.title, al.place, al.category_name as meetingState, i.img_path as imgPath, cg.category_name as meetingType
		FROM 	(select board_no, row_number() over(order by board_no desc) as rnum from sympathy where id=#{id}) sp, 
						(select board_no, title, category_no from board) b, img i, meetingType mt, category cg, 
			 			(select m.board_no, m.img_no, m.place, c.category_name from meeting m, category c where m.category_no=c.category_no) al			 			
		WHERE 	sp.board_no=b.board_no and al.board_no=b.board_no and i.img_no=al.img_no
						and mt.board_no=b.board_no and mt.category_no=cg.category_no and rnum between #{startRNum} and #{endRNum} order by rnum asc
	</select>

	<select id="getTotalCountById" parameterType="string" resultType="int">
		select count(*) from board where id=#{value} and category_no=17
	</select>
	
	<select id="getTotalCountAttender" parameterType="string" resultType="int">
		select count(*) from attender where id=#{value}
	</select>

	<select id="getTotalCountSympathy" parameterType="string" resultType="int">
		select count(*) from sympathy where id=#{value}
	</select>

	<insert id="insertDogImg" parameterType="dogDTO">
 		<selectKey keyProperty="imgNo" resultType="int" order="BEFORE" >
 			select img_seq.nextval from dual
 		</selectKey>
 		insert into img(img_no , img_path) values(#{imgNo},#{imgPath})
 	</insert>
 	<insert id="insertDogInfo" parameterType="dogDTO">
 		insert into dog(dog_no, name, bdate, intro, neutralization, reg_date, id, img_no, category_no)
 		values(dog_seq.nextval, #{name}, TO_DATE(#{bdate}, 'MM/DD/YYYY'), #{intro}, #{neutralization}, sysdate, #{id}, #{imgNo}, #{categoryNo})
 	</insert>
 	<insert id="insertTierStandBy" parameterType="string">
 		insert into tier(id, category_no) values(#{value}, 11)
 	</insert>
 	<update id="updateDogImg" parameterType="dogDTO">
 		update img set img_path=#{imgPath} where img_no = #{imgNo}
 	</update>
 	<update id="updateDogInfo" parameterType="dogDTO">
 		update dog set name=#{name}, bdate=TO_DATE(#{bdate}, 'MM/DD/YYYY'), intro=#{intro}, 
 		neutralization=#{neutralization}, category_no=#{categoryNo}
 		where id=#{id}
 	</update>

	<!-- 회원정보 수정 -->
	<update id="updateMemberInfo" parameterType="memberDTO">
		update member set nick=#{nick}, tel=#{tel} where id=#{id}
	</update>
	<!-- 비밀번호 정보 수정 -->
	<update id="updateMemberPWInfo" parameterType="memberDTO">
		update member set password=#{password}, category_no=#{categoryNo}, pw_answer=#{pwAnswer} where id=#{id}
	</update>
	<!-- 비밀번호 변경 -->
	<update id="updateMemberPW" parameterType="memberDTO">
		update member set password=#{password} where id=#{id}
	</update>
	
	<!-- pwQuestion 조회 -->
	<select id="getPWQuestion" resultType="map">
		select category_no, category_name from category where table_code=#{value}
	</select>
	
	<!-- id, pwQ, pwA 확인 -->
	<select id="checkIdPwAnswer" parameterType="memberDTO" resultType="int">
		select count(*) from member where id=#{id} and pw_answer=#{pwAnswer} and category_no=#{categoryNo}
	</select>
</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 





