<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
 
   <!-- 회원 등급 (Tier) 목록 -->
   <select id="tierMemberList" resultType="memberDTO">
		SELECT t.id,t.category_no as categoryNo,c.category_name as categoryName
		FROM TIER t,CATEGORY c		
		WHERE t.category_no=c.category_no
   </select>
   
	<!--전체 회원 목록 -->
   <select id="allMemberList" parameterType="pagingBean" resultType="memberDTO">
		SELECT m.id,m.nick,m.password,m.tel,m.pw_answer as pwAnswer,m.regdate,m.permitdate,t.category_no as categoryNo,c.category_name as categoryName,m.money
		FROM (select row_number() over(order by regdate desc) as rnum,id,nick,password,tel,pw_answer,regdate,permitdate,category_no,money from member) m,category c,(SELECT MAX(category_no) as category_no,id FROM TIER GROUP BY id) t
		WHERE t.category_no=c.category_no and m.id=t.id	 and rnum between #{startRowNumber} and #{endRowNumber} order by m.regdate desc
   </select>
  
	<!--일반회원 목록-->
   <select id="allRoleMemberList" resultType="memberDTO"  parameterType="pagingBean" >
		SELECT  r.id,r.nick,r.tel,r.pw_answer as pwAnswer,r.regdate, c.category_name as categoryName, t.category_no as categoryNo
		FROM (select id, nick,tel, to_char(regdate, 'yyyy-mm-dd') as regdate, pw_answer, category_no, 
		row_number() over(order by regdate desc) as rnum from member) r, 
		category c, (SELECT MAX(category_no) as category_no, id FROM TIER GROUP BY id) t
		WHERE t.category_no between 10 and 12 and t.id=r.id and c.category_no=r.category_no and r.rnum between 1 and 10
		order by rnum asc
   </select>
   
    <!-- 댕댕이 정보 가져오는 Result Map -->
   <resultMap id="memberdog" type="memberDTO">
	<collection property="dogDTO" column="id" javaType="com.sixfam.withpet.model.dto.DogDTO" 
	ofType="dogDTO" select="allDog"></collection>
   </resultMap>
   
   <!-- 예비주인 목록 리스트 -->
   <select id="allRoleStandby" resultMap="memberdog">
    SELECT m.id,m.nick,m.tel,m.pw_answer as pwAnswer,m.regdate,m.permitdate,m.category_no as categoryNo
	FROM (SELECT id, row_number() over(order by reg_date desc) as rnum FROM dog) d, member m,
    (SELECT MAX(category_no) as category_no, id FROM tier GROUP BY id) t
	WHERE t.category_no=11 and t.id=m.id and d.id=m.id and d.rnum between 1 and 3 order by d.rnum asc
   </select>
    
   <!-- 댕댕이주인님  목록 리스트-->
   <select id="allRoleDogmom" resultMap="memberdog">
   		SELECT m.id,m.nick,m.tel,m.pw_answer as pwAnswer,m.regdate,to_char(m.permitdate, 'yyyy-mm-dd') as permitdate,m.category_no as categoryNo
		FROM (SELECT id, row_number() over(order by reg_date desc) as rnum FROM dog) d, member m,
         (SELECT MAX(category_no) as category_no, id FROM tier GROUP BY id) t
		WHERE t.category_no=12 and t.id=m.id and d.id=m.id and d.rnum between #{startRowNumber} and #{endRowNumber} order by d.rnum asc
   </select>
   <!-- 댕댕이 Select -->
   <select id="allDog" parameterType="string" resultType="dogDTO">
		SELECT d.id,d.dog_no as dogNo,d.name,to_char(d.bdate, 'yyyy-mm-dd') as bdate,d.intro,d.neutralization,d.img_no as imgNo,d.category_no as categoryno,d.category_name as gender,to_char(d.reg_date, 'yyyy-mm-dd') as regDate
		FROM(SELECT dd.dog_no,dd.bdate,dd.name,dd.intro,dd.neutralization,dd.id,dd.img_no,dd.category_no,dd.reg_date,cc.category_name,ii.img_path
		FROM DOG dd, CATEGORY cc,IMG ii WHERE dd.category_no=cc.category_no and dd.img_no=ii.img_no) d,member m
		WHERE d.id=m.id and d.id=#{value}
   </select>
   
   <!-- 탈퇴회원 목록 -->
   <select id="allRoleExcept" resultType="memberDTO"  parameterType="pagingBean">
   		SELECT m.*
		FROM (SELECT id, nick, tel, money, to_char(regdate, 'yyyy-mm-dd') as regdate,
 		row_number() over(order by regdate desc) as rnum FROM member) m,
		(SELECT MAX(category_no) as category_no, id FROM tier GROUP BY id) t
		WHERE t.category_no=9 and t.id=m.id order by m.rnum asc
   </select>
   
   <!-- 관리자 목록 -->
   	 <select id="allRoleManager" resultType="memberDTO"  parameterType="pagingBean">
   		SELECT m.*
		FROM (SELECT id, nick, tel, money, to_char(regdate, 'yyyy-mm-dd') as regdate,
            row_number() over(order by regdate desc) as rnum FROM member) m,
		(SELECT MAX(category_no) as category_no, id FROM tier GROUP BY id) t
		WHERE t.category_no=13 and t.id=m.id order by m.rnum asc
   </select>
   
   <!--전체 회원 총인원수 -->
   <select id="allMemberCount" resultType="int">
		SELECT count(*) FROM member 
   </select>
   <!--회원 등급별 총인원 수 -->
   <select id="totalCountPerTier" resultType="int" parameterType="int">
		SELECT count(*) 
		FROM member m,tier t 
		WHERE m.id=t.id and t.category_no=#{categoryNo}
   </select>
   
   
   <!-- 전체 모임 리스트 -->
	<select id="allMeetingList" resultType="meetingDTO" parameterType="pagingBean">
		SELECT b.board_no as boardNo,b.id,b.title,b.content,b.hits,b.wdate,c.category_no as categoryNo,c.category_name as categoryName,c.*
		FROM (select board_no,id,title,content,hits, wdate,category_no FROM board where category_no = 17) b, 
		(SELECT row_number() over(order by m.board_no desc) as rnum,m.board_no,m.intro,m.people_count,m.place,m.date_no,m.img_no,m.category_no,cc.category_name
		FROM meeting m,(select * from MEETINGTYPE mmt,category ccc WHERE mmt.category_no=ccc.category_no) cc WHERE m.board_no=cc.board_no) c 
		WHERE b.board_no=c.board_no and rnum between #{startRowNumber} and #{endRowNumber} order by b.board_no desc
	</select>
   
    <!-- 게시판 타입별로 총 게시물 수 -->
   	<select id="boardCountPerCategory" parameterType="int" resultType="int">
   		SELECT COUNT(*) FROM board WHERE category_no=#{categoryNo}
   	</select>
   	
   	<!-- 견주 승인 날짜 업데이트 -->
  	<update id="dogmomPermitDate" parameterType="memberDTO">
   		UPDATE MEMBER SET permitdate=sysdate WHERE id=#{id}
   	</update>
   	
	<!-- 회원 등급 등록 : 탈퇴회원 categoryNo 9 -->
	<insert id="insertTierExcept" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},9)	
	</insert>
	
	<!-- 회원 등급 등록: 일반회원  categoryNo 10 -->
	<insert id="insertTierMember" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},10)	
	</insert>
	
	<!-- 회원 등급 등록: 예비주인  StandBy 	-->
	<insert id="insertTierStandby" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},11)	
	</insert>
	
	<!-- 회원 등급 등록: 댕댕이주인님 Dogmom  -->
	<insert id="insertTierDogmom" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},12)	
	</insert>
	
	<!-- 회원 등급 등록: 관리자 -->
	<insert id="insertTierManager" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},13)	
	</insert>
	
	<!-- 회원 등급 등록: 시스템관리자 -->
	<insert id="insertTierSystemAdmin" parameterType="memberDTO">
		insert into TIER(id,category_no) 
		values(#{id},14)	
	</insert>
	
	<!-- 회원이 가진 모든 등급 삭제 -->
	<delete id="deleteMemberTier" parameterType="memberDTO">
		delete from TIER where id=#{id}
	</delete>
	
	<!-- 모든 등급 목록 -->
	<select id="allTierList" resultType="memberDTO">
		select category_name as categoryName, category_no as categoryNo from category where category_no between 9 and 14
	</select>
	
<!-- 모금함 관리 -->	
	<select id="allDonationList" resultType="donationDTO" parameterType="pagingBean">
		SELECT b.board_no as boardNo, b.id,b.title, b.content,b.hits,b.wdate,d.category_no as categoryNo,d.donation_org as donationOrg,d.bank_name as bankName,d.account_no as accountNo, d.account_host as accountHost,d.final_money as finalMoney, d.donation_flag as donationFlag,d.category_name as categoryName,d.img
		FROM(SELECT row_number() over(order by dd.board_no desc) as rnum,dd.board_no, dd.donation_org, dd.bank_name,dd.account_no,dd.account_host,dd.final_money,dd.donation_flag,dd.category_no,dd.category_name,i.img
		FROM(SELECT ddd.board_no, ddd.donation_org, ddd.bank_name,ddd.account_no,ddd.account_host,ddd.final_money,ddd.donation_flag,ddd.category_no,ccc.category_name FROM donation ddd,category ccc WHERE ddd.category_no=ccc.category_no) dd,
		(SELECT board_no,LISTAGG(img_path,',') WITHIN GROUP (ORDER BY board_no) as img FROM boardimg GROUP BY board_no) i
		WHERE dd.board_no=i.board_no) d,(SELECT board_no, title, content, hits, wdate, category_no, id FROM board WHERE category_no = 18) b
		WHERE b.board_no=d.board_no and rnum between #{startRowNumber} and #{endRowNumber} order by b.wdate desc
	</select>
	
<!-- 모금함 관리 (모집상태별)  -->
	<select id="donationListPerState" resultType="donationDTO" parameterType="hashmap">
		SELECT b.board_no as boardNo, b.id,b.title, b.content,b.hits,b.wdate,d.category_no as categoryNo,d.donation_org as donationOrg,d.bank_name as bankName,d.account_no as accountNo, d.account_host as accountHost,d.final_money as finalMoney, d.donation_flag as donationFlag,d.category_name as categoryName,d.img
		FROM(SELECT row_number() over(order by dd.board_no desc) as rnum,dd.board_no, dd.donation_org, dd.bank_name,dd.account_no,dd.account_host,dd.final_money,dd.donation_flag,dd.category_no,dd.category_name,i.img
		FROM(SELECT ddd.board_no, ddd.donation_org, ddd.bank_name,ddd.account_no,ddd.account_host,ddd.final_money,ddd.donation_flag,ddd.category_no,ccc.category_name FROM donation ddd,category ccc WHERE ddd.category_no=ccc.category_no) dd,
		(SELECT board_no,LISTAGG(img_path,',') WITHIN GROUP (ORDER BY board_no) as img FROM boardimg GROUP BY board_no) i
		WHERE dd.board_no=i.board_no and dd.category_no=#{categoryNo}) d,(SELECT board_no, title, content, hits, wdate, category_no, id FROM board WHERE category_no = 18) b
		WHERE b.board_no=d.board_no and rnum between #{startRowNumber} and #{endRowNumber} order by b.wdate desc
	</select>	

<!-- 모금함 승인-->
	<update id="acceptDonation" parameterType="int">
		UPDATE DONATION SET category_no='29' WHERE board_no=#{value}
	</update>


<!-- 커뮤니티 (전체) -->
	<select id="allCommunityList" resultType="boardDTO" parameterType="pagingBean">
		SELECT cb.board_no as boardNo,cb.id,cb.title,cb.content,cb.hits,cb.wdate,cb.category_no as categoryNo,cb.category_name as categoryName
		FROM (SELECT  row_number() over(order by b.board_no desc) as rnum,b.board_no,b.id,b.title,b.content,b.hits,b.wdate,c.category_no,c.category_name
		FROM (select * from board) b, (select * from category where table_code='8') c
		WHERE b.category_no=c.category_no) cb, board pb
		WHERE cb.board_no=pb.board_no and rnum  between #{startRowNumber} and #{endRowNumber} order by cb.wdate desc
	</select>
	
<!-- 커뮤니티 타입 등록 -->
	<insert id="addCommunityType" parameterType="string">
		INSERT INTO category(category_no,table_code,category_name) VALUES(category_seq.nextval,8,#{value})
	</insert>
<!-- 커뮤니티 타입 삭제 -->
	<delete id="removeCommunityType" parameterType="int">
		DELETE FROM category WHERE category_no=#{value}
	</delete>
<!-- 커뮤니티 타입에 있는 게시글 삭제-->
	<delete id="removeCommunityTypeBoard" parameterType="int">
		DELETE FROM board WHERE category_no=#{value}
	</delete>
</mapper>
 